#!/bin/bash

# Prompt for username
echo "Enter the username:"
read USERNAME

# Prompt for the user's password
echo "Enter your sudo password:"
read -s PASSWORD

# Public key to add
PUB_KEY="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMp8KZNG8unefrzWRB68w5p950F9MwQTN44jY4kOKtfL Roman-PC_keys"

# Check if the .ssh directory exists, create it if not
echo $PASSWORD | sudo -S mkdir -p "/home/$USERNAME/.ssh"
echo $PASSWORD | sudo -S chown $USERNAME:$USERNAME "/home/$USERNAME/.ssh"
echo $PASSWORD | sudo -S chmod   700 "/home/$USERNAME/.ssh"

# Check if the authorized_keys file exists, create it if not
echo $PASSWORD | sudo -S touch "/home/$USERNAME/.ssh/authorized_keys"
echo $PASSWORD | sudo -S chown $USERNAME:$USERNAME "/home/$USERNAME/.ssh/authorized_keys"
echo $PASSWORD | sudo -S chmod   600 "/home/$USERNAME/.ssh/authorized_keys"

# Check if the public key is already in the authorized_keys file
if ! echo $PASSWORD | sudo -S grep -q "$PUB_KEY" "/home/$USERNAME/.ssh/authorized_keys"; then
    # Add the public key if it's not present
    echo $PASSWORD | sudo -S tee -a "/home/$USERNAME/.ssh/authorized_keys" <<< "$PUB_KEY"
    echo "Public key added to $USERNAME's authorized_keys."
else
    echo "Public key already exists in $USERNAME's authorized_keys."
fi

# Clear the password variable
unset PASSWORD
